sum(aboveT_2017),
sum(aboveT_2018),
sum(aboveT_2019),
sum(aboveT_2020)),
"year" = c(2013:2019))
#this one needs a function
GDDsums <- data.frame("GDD" = c(
sum(aboveT_2013), #this is currently for GDD > 10. 2013, 2017, 2018 are substantially less with the data I have than in Carl's.
sum(aboveT_2014),
sum(aboveT_2015),
sum(aboveT_2016),
sum(aboveT_2017),
sum(aboveT_2018),
sum(aboveT_2019),
sum(aboveT_2020)),
"year" = c(2013:CurrentYear))
GDDsums
Sep20_yearly <- data.frame("sep20" = calculate_Sep20_v(averageGDD, GDDsums$GDD),
"year" = c(2013:CurrentYear))
Sep20_yearly
Oct20s_df <- data.frame( #shows the difference between the given October 20th and the one I calculated. The GDD from excel has no documentation of the source or calculation
"MyOct20" = c(calculate_Oct20th(Sep20_yearly$sep20[1], Sep20_yearly$sep20[1], Sep20_yearly$sep20[1], "2013_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[2], Sep20_yearly$sep20[2], Sep20_yearly$sep20[2], "2014_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[3], Sep20_yearly$sep20[3], Sep20_yearly$sep20[3], "2015_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[4], Sep20_yearly$sep20[4], Sep20_yearly$sep20[4], "2016_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[5], Sep20_yearly$sep20[5], Sep20_yearly$sep20[5], "2017_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[6], Sep20_yearly$sep20[6], Sep20_yearly$sep20[6], "2018_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[7], Sep20_yearly$sep20[7], Sep20_yearly$sep20[7], "2019_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[8], Sep20_yearly$sep20[8], Sep20_yearly$sep20[8], "2020_init")[3]),
"year" = 2013:CurrentYear
)
climate2020_init <- meanTempsToDate_init %>%
filter(year == 2020)
Oct20s_df <- data.frame( #shows the difference between the given October 20th and the one I calculated. The GDD from excel has no documentation of the source or calculation
"MyOct20" = c(calculate_Oct20th(Sep20_yearly$sep20[1], Sep20_yearly$sep20[1], Sep20_yearly$sep20[1], "2013_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[2], Sep20_yearly$sep20[2], Sep20_yearly$sep20[2], "2014_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[3], Sep20_yearly$sep20[3], Sep20_yearly$sep20[3], "2015_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[4], Sep20_yearly$sep20[4], Sep20_yearly$sep20[4], "2016_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[5], Sep20_yearly$sep20[5], Sep20_yearly$sep20[5], "2017_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[6], Sep20_yearly$sep20[6], Sep20_yearly$sep20[6], "2018_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[7], Sep20_yearly$sep20[7], Sep20_yearly$sep20[7], "2019_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[8], Sep20_yearly$sep20[8], Sep20_yearly$sep20[8], "2020_init")[3]),
"year" = 2013:CurrentYear
)
climate2020_init
meanTempsToDate_1 %>% filter(year == 2020)
meanTempsToDate_init %>% filter(year == 2020)
meanTempsToDay_init
meanTempsToDate_init
view(meanTempsToDate_init
)
Oct20s_df <- data.frame( #shows the difference between the given October 20th and the one I calculated. The GDD from excel has no documentation of the source or calculation
"MyOct20" = c(calculate_Oct20th(Sep20_yearly$sep20[1], Sep20_yearly$sep20[1], Sep20_yearly$sep20[1], "2013_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[2], Sep20_yearly$sep20[2], Sep20_yearly$sep20[2], "2014_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[3], Sep20_yearly$sep20[3], Sep20_yearly$sep20[3], "2015_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[4], Sep20_yearly$sep20[4], Sep20_yearly$sep20[4], "2016_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[5], Sep20_yearly$sep20[5], Sep20_yearly$sep20[5], "2017_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[6], Sep20_yearly$sep20[6], Sep20_yearly$sep20[6], "2018_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[7], Sep20_yearly$sep20[7], Sep20_yearly$sep20[7], "2019_init")[3]),
"year" = 2013:(CurrentYear-1)
)
finalLTEpredictions(Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], "2019to20")
climate2019to20 <- meanTempsToDate_dormancy_daynum %>%
filter((year == 2019 & daynum <= 73) | (yeare =- 2019 & dayum >= 74)) %>%
select(daynum, tdiff, twoDayAvg) %>%
filter(!is.na(tdiff))
climate2019to20 <- meanTempsToDate_dormancy_daynum %>%
filter((year == 2019 & daynum <= 73) | (year =- 2019 & daynum >= 74)) %>%
select(daynum, tdiff, twoDayAvg) %>%
filter(!is.na(tdiff))
finalLTEpredictions(Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], "2019to20")
climate2019to20
view(climate2019to20)
climate2019to20 <- meanTempsToDate_dormancy_daynum %>%
filter((year == 2019 & daynum <= 73) | (year =- 2020 & daynum >= 74)) %>%
select(daynum, tdiff, twoDayAvg) %>%
filter(!is.na(tdiff))
view(climate2019to20)
climate2019to20 <- meanTempsToDate_dormancy_daynum %>%
filter((year == 2019 & daynum <= 73) | (year == 2020 & daynum >= 74)) %>%
select(daynum, tdiff, twoDayAvg) %>%
filter(!is.na(tdiff))
view(climate2019to20)
finalLTEpredictions(Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], "2019to20")
predLTE_combined_2019to20
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
?labels
labs()
?labs
xlab("Date") +
ylab("LTE 50") +
ggtitle(paste0("Predicted Hardiness in the Dormancy period for ", input$year),
subtitle = "Originated from Carl's May 2020 model")
}
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
meanTempsToDate_1
meanTempsToDate_1
meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg)
climate2013_GS
aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg))
aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg), 10)
aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% as.vector(), 10)
meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% as.vector()
meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% .[[1]]
sum(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]]), 10 )
sum(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% as.vector(.[[1]])), 10 )
sum(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% unlist(.[[1]])), 10 )
sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]])), 10 )
unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]]))
aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]])
aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]]
)
sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% .[[1]])), 10 )
sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% .[[1]])), 10) )
sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% .[[1]]), 10) )
sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% .[[1]], 10)) )
aboveT_2013
sum(aboveT_2013)
GDDsums <- data.frame()
GDDsums
for(i in 2013:CurrentYear){
GDDsums$i <- sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]], 10)))
}
for(i in 2013:CurrentYear){
for(i in 2013:CurrentYear){
index <- 1
for(i in 2013:CurrentYear){
index <- 1
for(i in 2013:CurrentYear){
GDDsums$year[index] <- i
for(i in 2013:CurrentYear){
GDDsums$GDD[index][ <- sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]], 10)))
GDDsums$year[index] <- i
index <- index + 1
}
GDDsums <- data.frame(GDD = c(), year = c())
GDDsums
GDDsums <- data.frame(GDD = c(0), year = c(0))
GDDsums
index <- 1
for(i in 2013:CurrentYear){
GDDsums$GDD[index][ <- sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]], 10)))
GDDsums$year[index] <- i
index <- index + 1
}
###
averageGDD <- mean(GDDsums$GDD)
Sep20_yearly <- data.frame("sep20" = calculate_Sep20_v(averageGDD, GDDsums$GDD),
"year" = c(2013:CurrentYear))
Oct20s_df <- data.frame( #shows the difference between the given October 20th and the one I calculated. The GDD from excel has no documentation of the source or calculation
"MyOct20" = c(calculate_Oct20th(Sep20_yearly$sep20[1], Sep20_yearly$sep20[1], Sep20_yearly$sep20[1], "2013_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[2], Sep20_yearly$sep20[2], Sep20_yearly$sep20[2], "2014_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[3], Sep20_yearly$sep20[3], Sep20_yearly$sep20[3], "2015_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[4], Sep20_yearly$sep20[4], Sep20_yearly$sep20[4], "2016_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[5], Sep20_yearly$sep20[5], Sep20_yearly$sep20[5], "2017_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[6], Sep20_yearly$sep20[6], Sep20_yearly$sep20[6], "2018_init")[3],
calculate_Oct20th(Sep20_yearly$sep20[7], Sep20_yearly$sep20[7], Sep20_yearly$sep20[7], "2019_init")[3]),
"year" = 2013:(CurrentYear-1)
)
#calculating all final & intermediate LTE's
#can look at intermediate Predicted LTE's using predLTE[1/2]_yearRange
#look at final predicted LTE's using predLTEfinal_yearRange
#the values in these functions are drawn directly from the excel sheet from the previous season GDD. I still need to make functions to recreate these numbers
#expect slight variation in the final predicted LTE. This happens when there are temperature differences that are very near the bounds of each IF statement. There are variations on the scale of .1 because of discrepancies in the precision of data
#Carl's model results are commented out. My calculated values will not be commented out
#check hardiness/dashboard/veryfiyingModel.R to see my notes on how to verify this model
#finalLTEpredictions(-10.54, -10.59, -10.59, "2012to13")
#finalLTEpredictions(-13.6, -13.6, -13.6, "2013to14")
#finalLTEpredictions(-9.77, -10.18, -10.18, "2014to15")
#finalLTEpredictions(-12.84, -12.84, -12.84, "2015to16")
#finalLTEpredictions(-11.84, -11.99, -11.99, "2016to17")
#finalLTEpredictions(-13.25, -13.25, -13.25, "2017to18")
#finalLTEpredictions(-13.84, -13.84, -13.84, "2018to19")
finalLTEpredictions(Oct20s_df$MyOct20[1], Oct20s_df$MyOct20[1], Oct20s_df$MyOct20[1], "2013to14")
finalLTEpredictions(Oct20s_df$MyOct20[2], Oct20s_df$MyOct20[2], Oct20s_df$MyOct20[2], "2014to15")
finalLTEpredictions(Oct20s_df$MyOct20[3], Oct20s_df$MyOct20[3], Oct20s_df$MyOct20[3], "2015to16")
finalLTEpredictions(Oct20s_df$MyOct20[4], Oct20s_df$MyOct20[4], Oct20s_df$MyOct20[4], "2016to17")
finalLTEpredictions(Oct20s_df$MyOct20[5], Oct20s_df$MyOct20[5], Oct20s_df$MyOct20[5], "2017to18")
finalLTEpredictions(Oct20s_df$MyOct20[6], Oct20s_df$MyOct20[6], Oct20s_df$MyOct20[6], "2018to19")
finalLTEpredictions(Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], "2019to20") #this function may need to be edited to account for a non exact dataframe length of 176
predLTE_combined_2013to14
predLTE_combined_2014to15
predLTE_combined_2015to16
predLTE_combined_2016to17
predLTE_combined_2017to18
predLTE_combined_2018to19
predLTE_combined_2019to20
#final values.
#predLTEfinal_2012to13
#use copyActualLTE in helpfulFunctions.R. So much better than manually entering this
#
measuredLTE_2013to14 <- data.frame(date = c(2013-10-25, 2013-11-08, 2013-11-22, 2013-12-06, 2013-12-20, 2014-01-03, 2014-01-17, 2014-01-31, 2014-02-14, 2014-02-28, 2014-03-14, 2014-03-27),
LTE = c(-13.9, -19.42, -22.87, -24.06, -24.09, -23.06, -23, -23.46, -22.6, -22.76, -17.62, -14.89))
measuredLTE_2014to15 <- data.frame(date = c(2014-10-28, 2014-11-11, 2014-11-24, 2014-12-08, 2014-12-22, 2015-01-05, 2015-01-19, 2015-02-02, 2015-02-16, 2015-03-04, 2015-03-18),
LTE = c(-13.58, -18.26, -21.3, -22.5, -22.67, -23.6, -22.12, -22.17, -18.5, -18.82, -11.55))
measuredLTE_2015to16 <- data.frame(date = c(2015-10-27, 2015-11-10, 2015-11-24, 2015-12-08, 2015-12-22, 2016-01-05, 2016-01-19, 2016-02-02, 2016-02-16, 2016-03-01, 2016-03-15, 2016-03-29),
LTE = c(-15.76, -20.52, -22.51, -22.77, -22.99, -24.21, -23.38, -22.84, -21.92, -18, -14.99, -11.16))
measuredLTE_2016to17 <- data.frame(date = c(2016-11-08, 2016-11-22, 2016-12-06, 2016-12-20, 2017-01-03, 2017-01-17, 2017-01-31, 2017-02-14, 2017-02-28, 2017-03-14, 2017-03-28, 2017-04-04),
LTE = c(-17.25, -20.98, -23.49, -24.42, -24.69, -26.05, -23.58, -24.08, -22.87, -20.5, -15.33, -13.66))
measuredLTE_2017to18 <- data.frame(date = c(2017-11-07, 2017-11-21, 2017-12-05, 2017-12-19, 2018-01-02, 2018-01-16, 2018-01-30, 2018-02-13, 2018-02-27, 2018-03-13, 2018-03-28, 2018-04-10),
LTE = c(-21.95, -22.2, -23.8, -23.6, -25.4, -23.6, -22.9, -23.6, -23.5, -20.8, -15.9, -11))
measuredLTE_2018to19 <- data.frame(date = c(2018-11-06, 2018-11-20, 2018-12-04, 2018-12-18, 2019-01-01, 2019-01-15, 2019-01-29, 2019-02-12, 2019-02-26, 2019-03-12, 2019-03-26, 2019-04-09),
LTE = c(-17.52, -23.3, -23.78, -23.85, -24.69, -24.02, -24.79, -25.18, -25.33, -24.65, -16.97, -10.72))
measuredLTE_2019to20 <- data.frame(date = c(2019-10-24, 2019-11-07, 2019-11-21, 2019-12-05, 2019-12-19, 2020-01-07, 2020-01-17, 2020-01-30, 2020-02-13, 2020-02-27, 2020-03-12, 2020-03-26),
LTE = c(-17.4, -21.19, -22.2, -24.4, -24.12, -23.34, -24.31, -22.8, -22.45, -21.31, -18.16, -15.83))
for(i in 1:2){print(i)}
for(i in 2013:CurrentYear){
sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% .[[1]], 10)))
sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == 2013) %>% select(twoDayAvg) %>% .[[1]], 10)))
for(i in 2013:CurrentYear){
GDDsums$GDD[index] <- sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]], 10)))
GDDsums$year[index] <- i
index <- index + 1
}
GDDsums <- data.frame(GDD = c(rep(0,length(2013:CurrentYear))), year = c(rep(0,length(2013:CurrentYear)))
GDDsums <- data.frame(GDD = c(rep(0,length(2013:CurrentYear))), year = c(rep(0,length(2013:CurrentYear))))
GDDsums <- data.frame(GDD = c(rep(0,length(2013:CurrentYear))), year = c(rep(0,length(2013:CurrentYear))))
GDDsums
GDDsums <- data.frame(GDD = c(rep(0,length(2013:CurrentYear))), year = 2013:CurrentYear)
GDDsums
GDDsums <- data.frame(GDD = c(rep(0,length(2013:CurrentYear))), year = 2013:CurrentYear-1)
GDDsums
GDDsums <- data.frame(GDD = c(rep(0,length(2013:CurrentYear))), year = 2013:(CurrentYear-1))
GDDsums <- data.frame(GDD = c(rep(0,length(2013:(CurrentYear -1)))), year = 2013:(CurrentYear-1))
GDDsums <- data.frame(GDD = c(rep(0,length(2013:CurrentYear))), year = 2013:(CurrentYear-1))
GDDsums
GDDsums <- data.frame(GDD = c(rep(0,length(2013:(CurrentYear)))), year = 2013:(CurrentYear))
index <- 1
for(i in 2013:CurrentYear){
GDDsums$GDD[index] <- sum(unlist(aboveThresholdTemp_v(meanTempsToDate_1 %>% filter(year == i) %>% select(twoDayAvg) %>% .[[1]], 10)))
GDDsums$year[index] <- i
index <- index + 1
}
GDDsums
test <- Oct20s_df
test
Oct20s_df <- data.frame(MyOct20 = c(rep(0, 2013:(CurrentYear - 1))), year = 2013:(CurrentYear-1))
Oct20s_df <- data.frame(MyOct20 = c(rep(0, length(2013:(CurrentYear - 1)))), year = 2013:(CurrentYear-1))
Oct20s_df
index2 <- 1
for(i in 2013:(CurrentYear - 1)){
Oct20s_df$MyOct20[index2] <- calculate_Oct20th(Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], "2013_init")[3])
}
Oct20s_df <- data.frame(MyOct20 = c(rep(0, length(2013:(CurrentYear - 1)))), year = 2013:(CurrentYear-1))
Oct20s_df <- data.frame(MyOct20 = c(rep(0, length(2013:(CurrentYear - 1)))), year = 2013:(CurrentYear-1))
index2 <- 1
for(i in 2013:(CurrentYear - 1)){
Oct20s_df$MyOct20[index2] <- calculate_Oct20th(Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], "2013_init")[3]
}
Oct20s_df
Sep20_yearly
index2 <- 1
for(i in 2013:(CurrentYear - 1)){
Oct20s_df$MyOct20[index2] <- calculate_Oct20th(Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], "2013_init")[3]
index2 <- index2 + 1
}
Oct20s_df
test
#                              September 20th   September 20th   September 20th
calculate_Oct20th <- function(initialPredLTE1, initialPredLTE2, initialPredLTEfinal){#yearRange == "2012to13_GS" "2013to14_GS" etc up to "2018to19_GS"
#Calculating October 20th is only necessary as I stuck to Carl's regime for counting days. 1 being (October 20th) and 176 (April 12th) being the final day.
#the structure of this function is a bit redundant. The predLTE names originally were written into the global environment but I realized that this is futile and a bit confusing.
#they were now moved to be written to the local environment for the function.
#
predLTE1 <- tibble(predLTE1 = c(initialPredLTE1, rep(0, 30)))
assign(
x = paste0("predLTE1_", yearRange),
value = tibble(predLTE1 = c(initialPredLTE1, rep(0, 30))),
envir = environment() #global environment for ease of checking. I guess it doesn't necessarily need to be outside of the current scope. Just nice to reference
)
assign(
x = paste0("predLTE2_", yearRange),
value = tibble(predLTE2 = c(initialPredLTE2, rep(0, 30))),
envir = environment()
)
assign(
x = paste0("predLTEfinal_", yearRange),
value = tibble(predLTEfinal = c(initialPredLTEfinal, rep(0, 30))),
envir = environment()
)
assign(
x = paste0("climatedf_", yearRange),
value = get(paste0("climate", yearRange)),
envir = environment()
)
temp1 <- get(paste0("predLTE1_", yearRange), envir = environment())
temp2 <- get(paste0("predLTE2_", yearRange), envir = environment())
temp3 <- get(paste0("predLTEfinal_", yearRange), envir = environment())
temp4 <- get(paste0("climatedf_", yearRange), envir = environment())
tempscale <- IF1_v(1, temp4$tdiff) + IF2_v(1, temp4$tdiff) %>%
as_tibble(tempscale = value)
for(index in 2:31){
temp1$predLTE1[index] <- IF3(1, tempscale$value[index], estimatedLTE1$estLTEperday[index], temp1$predLTE1[index - 1], temp2$predLTE2[index - 1])
temp2$predLTE2[index] <- IF4567(1, temp2$predLTE2[index - 1], estimatedLTE1$estLTE[index], estimatedLTE1$estLTE[index - 1], estimatedLTE1$estLTEperday[index], temp4$tdiff[index], temp1$predLTE1[index], temp1$predLTE1[index - 1])
}
for(index in 2:31){ #####################
section <- 1
if(section == 1){
today_if8 <- IF8(1, temp4$tdiff[index], temp2$predLTE2[index], temp2$predLTE2[index - 1], temp3$predLTEfinal[index - 1])
temp3$predLTEfinal[index] <- temp3$predLTEfinal[index - 1] + today_if8
}
}
#assign( #commented out because I think they are unnecessary. Still working on some things that I need to keep my environment for. May need to uncomment if the functions don't work
#  x = paste0("predLTE1_", yearRange),
#  value = temp1,
#  envir = .GlobalEnv #global environment for ease of checking. I guess it doesn't necessarily need to be outside of the current scope. Just nice to reference
#)
#assign(
#  x = paste0("predLTE2_", yearRange),
#  value = temp2,
#  envir = .GlobalEnv
#)
#assign(
#  x = paste0("predLTEfinal_", yearRange),
#  value = temp3,
#  envir = .GlobalEnv
#)
#assign(
#  x = paste0("climatedf_", yearRange),
#  value = temp4,
#  envir = .GlobalEnv
#)
return(c(temp1$predLTE1[31], temp2$predLTE2[31], temp3$predLTEfinal[31]))
}
index2 <- 1
for(i in 2013:(CurrentYear - 1)){
Oct20s_df$MyOct20[index2] <- calculate_Oct20th(Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2])[3]
index2 <- index2 + 1
}
#                              September 20th   September 20th   September 20th
calculate_Oct20th <- function(initialPredLTE1, initialPredLTE2, initialPredLTEfinal, yearRange){#yearRange == "2012to13_GS" "2013to14_GS" etc up to "2018to19_GS"
#Calculating October 20th is only necessary as I stuck to Carl's regime for counting days. 1 being (October 20th) and 176 (April 12th) being the final day.
#the structure of this function is a bit redundant. The predLTE names originally were written into the global environment but I realized that this is futile and a bit confusing.
#they were now moved to be written to the local environment for the function.
#
predLTE1 <- tibble(predLTE1 = c(initialPredLTE1, rep(0, 30)))
assign(
x = paste0("predLTE1_", yearRange),
value = tibble(predLTE1 = c(initialPredLTE1, rep(0, 30))),
envir = environment() #global environment for ease of checking. I guess it doesn't necessarily need to be outside of the current scope. Just nice to reference
)
assign(
x = paste0("predLTE2_", yearRange),
value = tibble(predLTE2 = c(initialPredLTE2, rep(0, 30))),
envir = environment()
)
assign(
x = paste0("predLTEfinal_", yearRange),
value = tibble(predLTEfinal = c(initialPredLTEfinal, rep(0, 30))),
envir = environment()
)
assign(
x = paste0("climatedf_", yearRange),
value = get(paste0("climate", yearRange)),
envir = environment()
)
temp1 <- get(paste0("predLTE1_", yearRange), envir = environment())
temp2 <- get(paste0("predLTE2_", yearRange), envir = environment())
temp3 <- get(paste0("predLTEfinal_", yearRange), envir = environment())
temp4 <- get(paste0("climatedf_", yearRange), envir = environment())
tempscale <- IF1_v(1, temp4$tdiff) + IF2_v(1, temp4$tdiff) %>%
as_tibble(tempscale = value)
for(index in 2:31){
temp1$predLTE1[index] <- IF3(1, tempscale$value[index], estimatedLTE1$estLTEperday[index], temp1$predLTE1[index - 1], temp2$predLTE2[index - 1])
temp2$predLTE2[index] <- IF4567(1, temp2$predLTE2[index - 1], estimatedLTE1$estLTE[index], estimatedLTE1$estLTE[index - 1], estimatedLTE1$estLTEperday[index], temp4$tdiff[index], temp1$predLTE1[index], temp1$predLTE1[index - 1])
}
for(index in 2:31){ #####################
section <- 1
if(section == 1){
today_if8 <- IF8(1, temp4$tdiff[index], temp2$predLTE2[index], temp2$predLTE2[index - 1], temp3$predLTEfinal[index - 1])
temp3$predLTEfinal[index] <- temp3$predLTEfinal[index - 1] + today_if8
}
}
#assign( #commented out because I think they are unnecessary. Still working on some things that I need to keep my environment for. May need to uncomment if the functions don't work
#  x = paste0("predLTE1_", yearRange),
#  value = temp1,
#  envir = .GlobalEnv #global environment for ease of checking. I guess it doesn't necessarily need to be outside of the current scope. Just nice to reference
#)
#assign(
#  x = paste0("predLTE2_", yearRange),
#  value = temp2,
#  envir = .GlobalEnv
#)
#assign(
#  x = paste0("predLTEfinal_", yearRange),
#  value = temp3,
#  envir = .GlobalEnv
#)
#assign(
#  x = paste0("climatedf_", yearRange),
#  value = temp4,
#  envir = .GlobalEnv
#)
return(c(temp1$predLTE1[31], temp2$predLTE2[31], temp3$predLTEfinal[31]))
}
for(i in 2013:(CurrentYear - 1)){
assign(x = paste0("climate", i, "_init"),
value = meanTempsToDate_init %>% filter(year == i)
)
Oct20s_df$MyOct20[index2] <- calculate_Oct20th(Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], paste0("climate", i, "_init"))[3]
index2 <- index2 + 1
}
index2 <- 1
for(i in 2013:(CurrentYear - 1)){
assign(x = paste0("climate", i, "_init"),
value = meanTempsToDate_init %>% filter(year == i)
)
Oct20s_df$MyOct20[index2] <- calculate_Oct20th(Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], Sep20_yearly$sep20[index2], paste0(i, "_init"))[3]
index2 <- index2 + 1
}
Oct20s_df
test
write.csv(predLTE_combined_2013to14, "predLTE_combined_2013to14.csv")
getwd()
write.csv(predLTE_combined_2014to15, "predLTE_combined_2014to15.csv")
write.csv(predLTE_combined_2015to16, "predLTE_combined_2015to16.csv")
write.csv(predLTE_combined_2016to17, "predLTE_combined_2016to17.csv")
write.csv(predLTE_combined_2017to18, "predLTE_combined_2017to18.csv")
write.csv(predLTE_combined_2018to19, "predLTE_combined_2018to19.csv")
write.csv(predLTE_combined_2019to20, "predLTE_combined_2019to20.csv")
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
predLTE_combined_2013to14
getwd()
setwd("C:/Ecology Lab/R/bcvin_git/bcvin/hardiness/dashboard/historicLTEdata")
`2013 to 2014` <- predLTE_combined_2013to14
`2014 to 2015` <- predLTE_combined_2014to15
`2014 to 2015` <- read_csv("predLTE_combined_2014to15.csv")
`2013 to 2014` <- read_csv("predLTE_combined_2013to14.csv")
`2014 to 2015` <- read_csv("predLTE_combined_2014to15.csv")
`2015 to 2016` <- read_csv("predLTE_combined_2015to16.csv")
`2016 to 2017` <- read_csv("predLTE_combined_2016to17.csv")
`2017 to 2018` <- read_csv("predLTE_combined_2017to18.csv")
`2018 to 2019` <- read_csv("predLTE_combined_2018to19.csv")
`2019 to 2020` <- read_csv("predLTE_combined_2019to20.csv")
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
predLTE_combined_2013to14
#
measuredLTE_2013to14 <- data.frame(date = c("2013-10-25", "2013-11-08", "2013-11-22", "2013-12-06", "2013-12-20", "2014-01-03", "2014-01-17", "2014-01-31", "2014-02-14", "2014-02-28", "2014-03-14"),
LTE = c(-13.9, -19.42, -22.87, -24.06, -24.09, -23.06, -23, -23.46, -22.6, -22.76, -17.62, -14.89))
#
measuredLTE_2013to14 <- data.frame(date = c("2013-10-25", "2013-11-08", "2013-11-22", "2013-12-06", "2013-12-20", "2014-01-03", "2014-01-17", "2014-01-31", "2014-02-14", "2014-02-28", "2014-03-14", "2014-03-27"),
LTE = c(-13.9, -19.42, -22.87, -24.06, -24.09, -23.06, -23, -23.46, -22.6, -22.76, -17.62, -14.89))
measuredLTE_2013to14
ggplot() + geom_point(data = measuredLTE_2013to14, aes(x = date, y = LTE))
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
`2013 to 14`
`2013 to 2014`
measuredLTE_2013to14
`2013 to 2014_measured`
`2013 to 2014_measured` <- measuredLTE_2013to14
`2013 to 2014_measured`
finalLTEpredictions(Oct20s_df$MyOct20[1], Oct20s_df$MyOct20[1], Oct20s_df$MyOct20[1], "2013to14")
finalLTEpredictions(Oct20s_df$MyOct20[2], Oct20s_df$MyOct20[2], Oct20s_df$MyOct20[2], "2014to15")
finalLTEpredictions(Oct20s_df$MyOct20[3], Oct20s_df$MyOct20[3], Oct20s_df$MyOct20[3], "2015to16")
finalLTEpredictions(Oct20s_df$MyOct20[4], Oct20s_df$MyOct20[4], Oct20s_df$MyOct20[4], "2016to17")
finalLTEpredictions(Oct20s_df$MyOct20[5], Oct20s_df$MyOct20[5], Oct20s_df$MyOct20[5], "2017to18")
finalLTEpredictions(Oct20s_df$MyOct20[6], Oct20s_df$MyOct20[6], Oct20s_df$MyOct20[6], "2018to19")
finalLTEpredictions(Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], Oct20s_df$MyOct20[7], "2019to20") #this function may need to be edited to account for a non exact dataframe length of 176
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
ggplot() + geom_point(data = '2013 to 2014', aes(y = LTE, x = date)))
ggplot() + geom_point(data = '2013 to 2014', aes(y = LTE, x = date))
`2013 to 2014`
ggplot() + geom_point(data = '2013 to 2014', aes(y = predLTE3, x = date))
test <- read_csv("predLTE_combined_2013to14.csv")
ggplot() + geom_point(data = test, aes(x = date, y = predLTE3))
ggplot() + geom_point(data = test, aes(x = date, y = predLTE3)) + geom_point(data = measuredLTE_2013to14, aes(x = date, y = LTE, color = "green"))
#
measuredLTE_2013to14 <- data.frame(date = c("2013-10-25", "2013-11-08", "2013-11-22", "2013-12-06", "2013-12-20", "2014-01-03", "2014-01-17", "2014-01-31", "2014-02-14", "2014-02-28", "2014-03-14", "2014-03-27"),
LTE = c(-13.9, -19.42, -22.87, -24.06, -24.09, -23.06, -23, -23.46, -22.6, -22.76, -17.62, -14.89))
measuredLTE_2013to14
#
measuredLTE_2013to14 <- tibble(date = c("2013-10-25", "2013-11-08", "2013-11-22", "2013-12-06", "2013-12-20", "2014-01-03", "2014-01-17", "2014-01-31", "2014-02-14", "2014-02-28", "2014-03-14", "2014-03-27"),
LTE = c(-13.9, -19.42, -22.87, -24.06, -24.09, -23.06, -23, -23.46, -22.6, -22.76, -17.62, -14.89))
measuredLTE_2013to14
#
measuredLTE_2013to14 <- tibble(date = as.Date(c("2013-10-25", "2013-11-08", "2013-11-22", "2013-12-06", "2013-12-20", "2014-01-03", "2014-01-17", "2014-01-31", "2014-02-14", "2014-02-28", "2014-03-14", "2014-03-27"), format = "%Y-%m-%d"),
LTE = c(-13.9, -19.42, -22.87, -24.06, -24.09, -23.06, -23, -23.46, -22.6, -22.76, -17.62, -14.89))
measuredLTE_2013to14
ggplot() + geom_point(data = test, aes(x = date, y = predLTE3)) + geom_point(data = measuredLTE_2013to14, aes(x = date, y = LTE, color = "green"))
measuredLTE_2014to15 <- data.frame(date = as.Date(c(2014-10-28, 2014-11-11, 2014-11-24, 2014-12-08, 2014-12-22, 2015-01-05, 2015-01-19, 2015-02-02, 2015-02-16, 2015-03-04, 2015-03-18, format = "%Y-%m-%d")),
LTE = c(-13.58, -18.26, -21.3, -22.5, -22.67, -23.6, -22.12, -22.17, -18.5, -18.82, -11.55))
measuredLTE_2014to15 <- data.frame(date = as.Date(c("2014-10-28", "2014-11-11", "2014-11-24", "2014-12-08", "2014-12-22", "2015-01-05", "2015-01-19", "2015-02-02", "2015-02-16", "2015-03-04", "2015-03-18"), format = "%Y-%m-%d"),
LTE = c(-13.58, -18.26, -21.3, -22.5, -22.67, -23.6, -22.12, -22.17, -18.5, -18.82, -11.55))
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
measuredLTE_2014to15 <- tibble(date = as.Date(c("2014-10-28", "2014-11-11", "2014-11-24", "2014-12-08", "2014-12-22", "2015-01-05", "2015-01-19", "2015-02-02", "2015-02-16", "2015-03-04", "2015-03-18"), format = "%Y-%m-%d"),
LTE = c(-13.58, -18.26, -21.3, -22.5, -22.67, -23.6, -22.12, -22.17, -18.5, -18.82, -11.55))
measuredLTE_2015to16 <- tibble(date = as.Date(c("2015-10-27", "2015-11-10", "2015-11-24", "2015-12-08", "2015-12-22", "2016-01-05", "2016-01-19", "2016-02-02", "2016-02-16", "2016-03-01", "2016-03-15", "2016-03-29"), format = "%Y-%m-%d"),
LTE = c(-15.76, -20.52, -22.51, -22.77, -22.99, -24.21, -23.38, -22.84, -21.92, -18, -14.99, -11.16))
measuredLTE_2016to17 <- tibble(date = as.Date(c("2016-11-08", "2016-11-22", "2016-12-06", "2016-12-20", "2017-01-03", "2017-01-17", "2017-01-31", "2017-02-14", "2017-02-28", "2017-03-14", "2017-03-28", "2017-04-04"), format = "%Y-%m-%d"),
LTE = c(-17.25, -20.98, -23.49, -24.42, -24.69, -26.05, -23.58, -24.08, -22.87, -20.5, -15.33, -13.66))
measuredLTE_2017to18 <- tibble(date = as.Date(c("2017-11-07", "2017-11-21", "2017-12-05", "2017-12-19", "2018-01-02", "2018-01-16", "2018-01-30", "2018-02-13", "2018-02-27", "2018-03-13", "2018-03-28", "2018-04-10"), format = "%Y-%m-%d"),
LTE = c(-21.95, -22.2, -23.8, -23.6, -25.4, -23.6, -22.9, -23.6, -23.5, -20.8, -15.9, -11))
measuredLTE_2018to19 <- tibble(date = as.Date(c("2018-11-06", "2018-11-20", "2018-12-04", "2018-12-18", "2019-01-01", "2019-01-15", "2019-01-29", "2019-02-12", "2019-02-26", "2019-03-12", "2019-03-26", "2019-04-09"), format = "%Y-%m-%d"),
LTE = c(-17.52, -23.3, -23.78, -23.85, -24.69, -24.02, -24.79, -25.18, -25.33, -24.65, -16.97, -10.72))
measuredLTE_2019to20 <- tibble(date = as.Date(c("2019-10-24", "2019-11-07", "2019-11-21", "2019-12-05", "2019-12-19", "2020-01-07", "2020-01-17", "2020-01-30", "2020-02-13", "2020-02-27", "2020-03-12", "2020-03-26"), format = "%Y-%m-%d"),
LTE = c(-17.4, -21.19, -22.2, -24.4, -24.12, -23.34, -24.31, -22.8, -22.45, -21.31, -18.16, -15.83))
`2013 to 2014_measured` <- measuredLTE_2013to14
`2014 to 2015_measured` <- measuredLTE_2014to15
`2015 to 2016_measured` <- measuredLTE_2015to16
`2016 to 2017_measured` <- measuredLTE_2016to17
`2017 to 2018_measured` <- measuredLTE_2017to18
`2018 to 2019_measured` <- measuredLTE_2018to19
runApp('C:/Ecology Lab/R/Shiny/hardiness/dashboard')
